class Solution {
    public int[] sortArray(int[] nums) {
        int N = nums.length;
        for (int i = N / 2 - 1; i >= 0; i--)
            heapify(nums, N, i);

        for (int i = N - 1; i > 0; i--) {
            int temp = nums[0];
            nums[0] = nums[i];
            nums[i] = temp;
            heapify(nums, i, 0);
        }
        return nums;
    }
    void heapify(int nums[], int N, int i){
        int largest = i; 
        int l = 2 * i + 1; 
        int r = 2 * i + 2; 

        if (l < N && nums[l] > nums[largest])
            largest = l;

        if (r < N && nums[r] > nums[largest])
            largest = r;

        if (largest != i){
            int swap = nums[i];
            nums[i] = nums[largest];
            nums[largest] = swap;
            heapify(nums, N, largest);
        }
    }
}
